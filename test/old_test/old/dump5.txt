#API Grade configs
        await page.goto(url=APIGradeCollum, wait_until='commit')
        
        # contentDetail["resource/x-bb-asmt-test-link"].test.gradingColumn.
        config = 'visible'
        print(f'Checking {item_search} visible...')
        result_visibility = await page.evaluate(filteredRequest_columnName(item_search, config))
        # "visible": true,

        config = 'possible'
        print(f'Checking {item_search} possible...')
        result_possible_note = await page.evaluate(filteredRequest_columnName(item_search, config))
        # "possible": 10,

        config = 'multipleAttempts'
        print(f'Checking {item_search} possible...')
        result_attempts = await page.evaluate(filteredRequest_columnName(item_search, config))
        # "multipleAttempts": 0,

        config = 'visibleInBook'
        print(f'Checking {item_search} visibleInBook...')
        result_visibleInBook = await page.evaluate(filteredRequest_columnName(item_search, config))
        # "visibleInBook": false,
        
        config = 'aggregationModel'
        print(f'Checking {item_search} aggregationModel...')
        result_aggregationModel = await page.evaluate(filteredRequest_columnName(item_search, config))
        # "aggregationModel": "HIGHEST"/"LAST",'
        
        config = 'autoPostGrades'
        print(f'Checking {item_search} autoPostGrades...')
        result_autoPostGrades = await page.evaluate(filteredRequest_columnName(item_search, config))
        
        # config = 'genericReadOnlyData.dueDate'
        config = 'dueDate'
        print(f'Checking {item_search} hand in date...')
        
        try:
            result_dueDate = await page.evaluate(filteredRequest_columnName(item_search, config))
        except Exception as e:
            result_dueDate = 'No date associated!'
        
        if result_dueDate != 'No date associated!':
            result_dueDate = await adjust_date(result_dueDate)
        
        #=======================================================================
        