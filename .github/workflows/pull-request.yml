name: Create Pull Request

on:
  push:
    branches:
      - 'dev'
    paths-ignore:
      - '.github/**'

jobs:
  create-pr:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get commit message
        id: extract_commit
        run: |
          if git log -1 --pretty=%B | grep -q '\[pull-request\]'; then
            echo "skip=true" >> $GITHUB_ENV
          else
            echo "skip=false" >> $GITHUB_ENV
          fi

      - name: Gather commit messages
        if: env.skip == 'true'
        id: commits
        run: |
          git fetch origin main dev
          COMMITS=$(git log origin/main..HEAD --oneline | tr '\n' '|' | sed 's/|$//')
          echo "commits_body=$COMMITS" >> $GITHUB_ENV

      - name: Determine PR title
        if: env.skip == 'true'
        id: determine_pr_title
        run: |
          PR_TITLE="Automated PR from ${{ github.ref_name }}"
          if [[ "${{ env.commit_message }}" == *"[major]"* ]]; then
            PR_TITLE="$PR_TITLE [major]"
          elif [[ "${{ env.commit_message }}" == *"[minor]"* ]]; then
            PR_TITLE="$PR_TITLE [minor]"
          fi
          echo "pr_title=$PR_TITLE" >> $GITHUB_ENV

      - name: Format commit body for PR
        if: env.skip == 'true'
        id: format_commits
        run: |
          FORMATTED_COMMITS=$(echo "${{ env.commits_body }}" | tr '|' '\n')
          printf "formatted_commits<<EOF\n%s\nEOF\n" "$FORMATTED_COMMITS" >> $GITHUB_ENV

      - name: Create Pull Request
        if: env.skip == 'true'
        uses: peter-evans/create-pull-request@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          base: main
          branch: dev
          title: ${{ env.pr_title }}
          body: |
            ### Commits included in this PR:
            ${{ env.formatted_commits }}