name: Create Pull Request

on:
  push:
    branches:
      - 'dev'
    paths-ignore:
      - '.github/**'

jobs:
  create-pr:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get commit message
        id: extract_commit
        run: |
          if git log -1 --pretty=%B | grep -q '\[pull-request\]'; then
            echo "skip=true" >> $GITHUB_ENV
          else
            echo "skip=false" >> $GITHUB_ENV
          fi

      - name: Install jq
        if: env.skip == 'true'
        run: sudo apt-get install -y jq

      - name: Determine PR title
        if: env.skip == 'true'
        id: determine_pr_title
        run: |
          PR_TITLE="Automated PR from ${{ github.ref_name }}"
          if [[ "${{ env.commit_message }}" == *"[major]"* ]]; then
            PR_TITLE="$PR_TITLE [major]"
          elif [[ "${{ env.commit_message }}" == *"[minor]"* ]]; then
            PR_TITLE="$PR_TITLE [minor]"
          fi
          echo "pr_title=$PR_TITLE" >> $GITHUB_ENV

      - name: Create Pull Request
        if: env.skip == 'true'
        run: |
          # Define the pull request body
          PR_BODY="### Automated PR from ${{ github.ref_name }}"

          # Create the pull request and store the response
          RESPONSE=$(curl -s -X POST \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            -d '{
              "title": "'"${{ env.pr_title }}"'",
              "head": "dev",
              "base": "main",
              "body": "'"$PR_BODY"'"
            }' \
            https://api.github.com/repos/${{ github.repository }}/pulls)

          # Extract the pull request number from the response
          PR_NUMBER=$(echo "$RESPONSE" | jq -r '.number')

          # Check if the PR creation was successful
          if [[ "$PR_NUMBER" == "null" || -z "$PR_NUMBER" ]]; then
            echo "Failed to create pull request. Response: $RESPONSE"
            exit 1
          fi

          # Merge the pull request
          MERGE_RESPONSE=$(curl -s -X PUT \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            -d '{
              "commit_title": "Merged PR #'$PR_NUMBER'",
              "merge_method": "squash"
            }' \
            https://api.github.com/repos/${{ github.repository }}/pulls/$PR_NUMBER/merge)

          # Check if the merge was successful
          if [[ $(echo "$MERGE_RESPONSE" | jq -r '.merged') != "true" ]]; then
            echo "Failed to merge pull request. Response: $MERGE_RESPONSE"
            exit 1
          fi

          echo "Pull request #$PR_NUMBER created and merged successfully."

      - name: Delete dev branch
        if: env.skip == 'true'
        run: |
          DELETE_RESPONSE=$(curl -s -X DELETE \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/${{ github.repository }}/git/refs/heads/dev)

          if [[ "$(echo "$DELETE_RESPONSE" | jq -r '.message')" == "null" ]]; then
            echo "Deleted dev branch successfully."
          else
            echo "Failed to delete dev branch. Response: $DELETE_RESPONSE"
            exit 1
          fi

      - name: Recreate dev branch
        if: env.skip == 'true'
        run: |
          CREATE_BRANCH_RESPONSE=$(curl -s -X POST \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            -d '{
              "ref": "refs/heads/dev",
              "sha": "'"$(git rev-parse origin/main)"'"
            }' \
            https://api.github.com/repos/${{ github.repository }}/git/refs)

          if [[ "$(echo "$CREATE_BRANCH_RESPONSE" | jq -r '.ref')" == "refs/heads/dev" ]]; then
            echo "Recreated dev branch successfully."
          else
            echo "Failed to recreate dev branch. Response: $CREATE_BRANCH_RESPONSE"
            exit 1
          fi