name: Create Release

on:
  workflow_run:
    workflows: ["Continuous Integration"]
    types:
      - completed
  workflow_dispatch:  # Allows manual triggering

jobs:
  release:
    runs-on: windows-latest  # Use a Windows runner to support Inno Setup

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: main
      
      - name: Get Version from package.json
        id: get_version
        run: |
            $version = (Get-Content package.json | ConvertFrom-Json).version
            echo "TAG_NAME=$version" >> $env:GITHUB_ENV
        shell: pwsh
        
      - name: Clone additional GitHub repo into scripts folder
        run: |
            git clone https://github.com/rdm10br/BB_Py_Automation.git scripts
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22.4.0'

      - name: Install dependencies
        run: |
            npm install

      - name: List Cloned Files for Debugging
        run: |
          tree

      # - name: List Cloned Files for Debugging
      #   run: |
      #     dir /scripts/BB_Py_Automation /s
      
      - name: Create Mock JSON Files
        run: |
          echo {} > scripts/BB_Py_Automation/src/Metodos/Login/__pycache__/login.json
          echo {} > scripts/BB_Py_Automation/src/Metodos/Login/__pycache__/login_cache.json

      - name: List Cloned Files for Debugging2
        run: |
          tree

      - name: Build Nextron.js app
        run: |
            npm run build

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v3
        with:
          name: nextron-build
          path: ./dist
          
      - name: Install Chocolatey
        run: |
          Set-ExecutionPolicy Bypass -Scope Process -Force; `
          [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; `
          iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))

      - name: Install Inno Setup
        run: |
          choco install innosetup

      - name: Build the Inno Setup Installer
        run: |
          # Assuming you have an Inno Setup script (.iss) in your repo
          "C:\Program Files (x86)\Inno Setup 6\ISCC.exe" build/installer/setup.iss
        env:
          VERSION: ${{ env.TAG_NAME }}

      - name: Upload Installer
        uses: actions/upload-artifact@v3
        with:
          name: setup-installer
          path: Output/BlackBot.exe

      - name: Generate Release Notes
        id: release_notes
        run: |
            $PREVIOUS_TAG = git describe --tags --abbrev=0 2>$null
  
            if ([string]::IsNullOrEmpty($PREVIOUS_TAG)) {
              $release_notes = git log --oneline --pretty=format:"%h %s" | ForEach-Object { ":seedling: $_" }
            } else {
              $release_notes = git log $PREVIOUS_TAG..$TAG_NAME --oneline --pretty=format:"%h %s" | ForEach-Object { ":seedling: $_" }
            }
            
            echo "RELEASE_NOTES=$release_notes" >> $env:GITHUB_ENV

      - name: Create GitHub Release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ env.TAG_NAME }}
          release_name: ${{ env.TAG_NAME }}
          body: ${{ env.RELEASE_NOTES }}
          draft: false
          prerelease: false
          assets: |
            ./dist/*
            Output/BlackBot.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}